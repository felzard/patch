name: Global (CI/CD)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  automate-shit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip default-jre cargo
          cargo install apkeep

      - name: Download APK/XAPK from APKPure
        run: |
          mkdir -p downloads
          apkeep -a com.sega.ColorfulStage.en -d apk-pure downloads

      - name: Download tools from GitHub Release
        run: |
          wget -q https://github.com/felzard/patch/releases/download/1/apksigner.jar
          wget -q https://github.com/felzard/patch/releases/download/1/aapt2.exe
          wget -q https://github.com/felzard/patch/releases/download/1/APKEditor.jar
          wget -q https://github.com/felzard/patch/releases/download/1/testkey.pk8
          wget -q https://github.com/felzard/patch/releases/download/1/testkey.x509.pem

      - name: Extract or Merge APK
        run: |
          FILE=$(ls downloads/*.{apk,xapk} 2>/dev/null | head -n1)
          if [[ "$FILE" == *.xapk ]]; then
            echo "üì¶ Merging XAPK using APKEditor..."
            mkdir merged
            cp "$FILE" merged/
            java -jar APKEditor.jar m -i merged
            mv merged/standalone.apk base.apk
          else
            echo "‚úÖ Single APK detected"
            cp "$FILE" base.apk
          fi

      - name: Decompile APK with apktool
        run: |
          wget https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool -O apktool
          wget https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.9.0.jar -O apktool.jar
          chmod +x apktool
          sudo mv apktool apktool.jar /usr/local/bin/
          apktool d base.apk -o decompiled

      - name: Extract APK Version
        id: version
        run: |
          if [ -f decompiled/apktool.yml ]; then
            echo "‚úÖ apktool.yml found!"
            cat decompiled/apktool.yml
            VERSION_NAME=$(grep -oP 'versionName:\s*\K\S+' decompiled/apktool.yml)
            if [ -n "$VERSION_NAME" ]; then
              echo "apk_version=$VERSION_NAME" >> $GITHUB_OUTPUT
            else
              echo "‚ùå versionName not found"
              exit 1
            fi
          else
            echo "‚ùå apktool.yml not found!"
            exit 1
          fi

      - name: Zipalign APK
        run: |
          echo "üîÉ Aligning APK..."
          wget -q https://dl.google.com/android/repository/build-tools_r30.0.3-linux.zip
          unzip -q build-tools_r30.0.3-linux.zip -d android-tools
          chmod +x android-tools/**/zipalign
          ./android-tools/**/zipalign -p -f 4 base.apk aligned.apk

      - name: Sign APK using apksigner.jar
        run: |
          echo "üîè Signing APK..."
          java -jar apksigner.jar sign \
            --key testkey.pk8 \
            --cert testkey.x509.pem \
            --out signed.apk \
            aligned.apk

      - name: Upload Unsigned APK
        uses: actions/upload-artifact@v4
        with:
          name: ProjectSekai-Unsigned-APK
          path: base.apk

      - name: Upload Signed APK
        uses: actions/upload-artifact@v4
        with:
          name: ProjectSekai-Signed-APK
          path: signed.apk

      - name: Notify Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          VERSION=${{ steps.version.outputs.apk_version }}
          REPO=${{ github.repository }}
          RUN_ID=${{ github.run_id }}
          SIGNED_URL="https://nightly.link/$REPO/actions/runs/$RUN_ID/ProjectSekai-Signed-APK.zip"
          UNSIGNED_URL="https://nightly.link/$REPO/actions/runs/$RUN_ID/ProjectSekai-Unsigned-APK.zip"

          echo "üì£ Sending Discord webhook..."
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{
              "content": "**‚úÖ Project Sekai APK Build Complete**\n**Version:** '"$VERSION"'\n\nüîê Signed: '"$SIGNED_URL"'\nüì¶ Unsigned: '"$UNSIGNED_URL"'"
            }' \
            $DISCORD_WEBHOOK
