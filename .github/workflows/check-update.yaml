name: Check for Updates

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  check-updates:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cargo unzip wget default-jre
          cargo install apkeep

      - name: Install apktool
        run: |
          wget https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool -O apktool
          wget https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.9.0.jar -O apktool.jar
          chmod +x apktool
          sudo mv apktool apktool.jar /usr/local/bin/

      - name: Download APKs
        run: |
          mkdir -p downloads
          apkeep -a com.sega.pjsekai -d apk-pure downloads
          apkeep -a com.sega.ColorfulStage.en -d apk-pure downloads

      - name: Install APKEditor
        run: |
          curl -L -o APKEditor.jar https://github.com/felzard/patch/releases/download/1/apkeditor.jar

      - name: Process JP APK
        id: jp
        run: |
          FILE=$(ls downloads/com.sega.pjsekai*.{apk,xapk} 2>/dev/null | head -n1)
          if [[ "$FILE" == *.xapk ]]; then
            java -jar APKEditor.jar m -i "$FILE" -o merged_jp.apk
          else
            cp "$FILE" merged_jp.apk
          fi
          apktool d merged_jp.apk -o decompiled_jp
          VERSION_NAME=$(grep -oP '^  versionName:\s*\K.+' decompiled_jp/apktool.yml)
          echo "apk_version=$VERSION_NAME" >> $GITHUB_OUTPUT

      - name: Process Global APK
        id: global
        run: |
          FILE=$(ls downloads/com.sega.ColorfulStage.en*.{apk,xapk} 2>/dev/null | head -n1)
          if [[ "$FILE" == *.xapk ]]; then
            java -jar APKEditor.jar m -i "$FILE" -o merged_global.apk
          else
            cp "$FILE" merged_global.apk
          fi
          apktool d merged_global.apk -o decompiled_global
          VERSION_NAME=$(grep -oP '^  versionName:\s*\K.+' decompiled_global/apktool.yml)
          echo "apk_version=$VERSION_NAME" >> $GITHUB_OUTPUT

      - name: Compare JP version
        id: check_jp
        run: |
          latest_jp="${{ steps.jp.outputs.apk_version }}"
          current_jp=$(cat version_jp.md)
          echo "Latest JP version: $latest_jp"
          echo "Current JP version: $current_jp"
          if [ "$latest_jp" != "$current_jp" ]; then
            echo "new_jp=true" >> $GITHUB_OUTPUT
            echo "$latest_jp" > version_jp.md
          else
            echo "new_jp=false" >> $GITHUB_OUTPUT
          fi

      - name: Compare Global version
        id: check_global
        run: |
          latest_global="${{ steps.global.outputs.apk_version }}"
          current_global=$(cat version_en.md)
          echo "Latest Global version: $latest_global"
          echo "Current Global version: $current_global"
          if [ "$latest_global" != "$current_global" ]; then
            echo "new_global=true" >> $GITHUB_OUTPUT
            echo "$latest_global" > version_en.md
          else
            echo "new_global=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit version updates
        if: steps.check_jp.outputs.new_jp == 'true' || steps.check_global.outputs.new_global == 'true'
        run: |
          git config user.name "Simanjuntaksekai"
          git config user.email "rajahitam@jawajawajawa.com"
          git add version_jp.md version_en.md
          git commit -m "Update version files"
          git push

      - name: Trigger JP CI/CD
        if: steps.check_jp.outputs.new_jp == 'true'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: build-jp-apk

      - name: Trigger Global CI/CD
        if: steps.check_global.outputs.new_global == 'true'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: build-global-apk

      - name: Notify Discord
        if: steps.check_jp.outputs.new_jp == 'true' || steps.check_global.outputs.new_global == 'true'
        env:
          DISCORD_WEBHOOK: ${{ secrets.UPDATE_NOTIFICATION }}
        run: |
          JP_VERSION="${{ steps.jp.outputs.apk_version }}"
          GLOBAL_VERSION="${{ steps.global.outputs.apk_version }}"
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{
              "embeds": [{
                "title": "ðŸ”” Project Sekai Update Check",
                "fields": [
                  {
                    "name": "JP Version",
                    "value": "'"$JP_VERSION"'",
                    "inline": true
                  },
                  {
                    "name": "Global Version",
                    "value": "'"$GLOBAL_VERSION"'",
                    "inline": true
                  }
                ]
              }]
            }' \
            $DISCORD_WEBHOOK
